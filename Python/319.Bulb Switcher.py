#寻找两个字符串，使得两字符串长度的乘积最大。
#要求两个字符串不能存在相同的字母。不存在返回0。

#对于第i栈灯泡，当i的因子个数为奇数时，最终会保持点亮状态，例如9的因子为1，3，9
#而当i的因子个数为偶数时，最终会保持熄灭状态，例如8的因子为：1，2，4，8
#当且仅当i为完全平方数时，其因子个数为奇数
#前10盏灯泡的开闭过程如下所示：
#0 0 0 0 0 0 0 0 0 0    0
#1 1 1 1 1 1 1 1 1 1    1
#1 0 1 0 1 0 1 0 1 0    2
#1 0 0 0 1 1 1 0 0 0    3
#1 0 0 1 1 1 1 1 0 0    4
#1 0 0 1 0 1 1 1 0 1    5
#1 0 0 1 0 0 1 1 0 1    6
#1 0 0 1 0 0 0 1 0 1    7
#1 0 0 1 0 0 0 0 0 1    8
#1 0 0 1 0 0 0 0 1 1    9
#1 0 0 1 0 0 0 0 1 0    10
import math
class Solution(object):
    def bulbSwitch(self, n):
        return int(math.sqrt(n))

s = Solution()
print(s.bulbSwitch(16))
